from pykafka import KafkaClient
import threading
import datetime as dt  # Corrected import alias for datetime
import random
import json  # Import JSON library to serialize the payload

KAFKA_HOST = "localhost:9092"

client = KafkaClient(hosts=KAFKA_HOST)
topic = client.topics[b"raw-weather-reports"]  # Updated to bytes since pykafka expects topic names as bytes


def generate_random_measurement():
    return random.randint(1, 100)


def generate_random_city():
    return random.choice(["Austin", "San Antonio", "Dallas"])


def generate_random_state():
    return random.choice(["Texas", "Nebraska", "Nevada"])


def generate_random_county():
    return random.choice(["Harris", "Bexar", "McLennan"])


def generate_random_latitude():
    return round(random.uniform(30.0, 33.0), 2)


def generate_random_longitude():
    return round(random.uniform(-99.0, -97.0), 2)


# Produce JSON messages to the Kafka topic
with topic.get_sync_producer() as producer:
    for i in range(10):
        # Create the JSON payload for each message
        json_payload = {
            "time": str(dt.datetime.now()),  # Corrected time generation
            "measurement": generate_random_measurement(),
            "location": generate_random_city(),
            "state": generate_random_state(),
            "county": generate_random_county(),
            "latitude": generate_random_latitude(),
            "longitude": generate_random_longitude(),
            "remarks": f"Generated by Kafka Producer 1 at {dt.datetime.now()}"
        }

        # Serialize the payload to a JSON formatted string and encode it as UTF-8
        encoded_message = json.dumps(json_payload).encode("utf-8")

        # Produce the encoded JSON message to the Kafka topic
        producer.produce(encoded_message)

        print(f"Produced message {i + 1}: {json_payload}")